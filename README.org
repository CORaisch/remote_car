* Preinstallation
** 1) install Ubuntu Core or Ubuntu Mate on Raspberry Pi
** 2) install git build-essentials python-dev
** 3) install ROS using apt-get and setup .bashrc accordingly
* Installation
** 1) install PCA9685 python library from Adafruit as described at https://github.com/adafruit/Adafruit_Python_PCA9685
** 2) clone this repository and build with catkin
*** $ cd remote_car
*** $ catkin_make
*** $ echo "source devel/setup.bash" >> ~/.bashrc
* Usage
** connect PCA9685 breakout/shield via i2c with Raspberry Pi as described at https://learn.adafruit.com/adafruit-16-channel-servo-driver-with-raspberry-pi/overview
** plug in steering servo at channel 0
** from the ESC only plug in Signal (white) and GND. Do not connect the VCC of the ESC with VCC of PCA9685 since most ESCs provide 5V at VCC to power the receiver. The ESC will normally be powered directly from the battery.
** launch nodes in the following order to control car with the keyboard
*** 1) $ roscore
*** 2) $ rosrun keyboard_input keyboard_input_gui.py
*** 3) $ rosrun car_controller control.py
**** the user who runs the scripts needs to be in the i2c group so that the control.py script can access /dev/i2c-1
***** # usermod -a -G i2c <username>
**** ensure that all python scripts are executable
***** $ chmod +x src/keyboard_input/scripts/keyboard_input_gui.py
***** $ chmod +x src/keyboard_input/scripts/keyboard_input_pynput.py
***** $ chmod +x src/car_controller/scripts/control.py
**** ensure that devel/setup.bash is sourced in all terminals or added to .bashrc
** focus the GUI to capture the keyboard inputs
** control the car using arrow keys
* TODOs
** add support for ps4 bluetooth gamepad
